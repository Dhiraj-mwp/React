{"ast":null,"code":"// import redux from 'redux';\nimport { createStore } from \"redux\";\nconst initialSate = {\n  counter: 0,\n  showCounter: true\n};\nconst counsterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialSate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'toogle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\nconst reduxStore = createStore(counsterReducer);\nexport default reduxStore;","map":{"version":3,"names":["createStore","initialSate","counter","showCounter","counsterReducer","state","arguments","length","undefined","action","type","amount","reduxStore"],"sources":["C:/Users/Dhiraj Kumar/rhr/React/redux-1/src/store/counterRedux.js"],"sourcesContent":["\r\n// import redux from 'redux';\r\nimport { createStore } from \"redux\";\r\n\r\nconst initialSate = { counter : 0, showCounter: true }\r\nconst counsterReducer = (state = initialSate , action) => {\r\nif(action.type === 'increment'){\r\n return {\r\n    counter : state.counter + 1,\r\n    showCounter: state.showCounter\r\n }\r\n}\r\n\r\nif(action.type === 'increase'){\r\n   return {\r\n      counter : state.counter + action.amount,\r\n      showCounter: state.showCounter\r\n   }\r\n  }\r\n\r\n if(action.type === 'decrement'){\r\n    return {\r\n       counter : state.counter - 1,\r\n       showCounter: state.showCounter\r\n    }\r\n}\r\n\r\nif(action.type === 'toogle'){\r\n   return {\r\n      counter : state.counter,\r\n      showCounter: !state.showCounter\r\n   }\r\n}\r\n  return state;\r\n};\r\n\r\nconst reduxStore = createStore(counsterReducer);\r\n\r\nexport default reduxStore;\r\n"],"mappings":"AACA;AACA,SAASA,WAAW,QAAQ,OAAO;AAEnC,MAAMC,WAAW,GAAG;EAAEC,OAAO,EAAG,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AACtD,MAAMC,eAAe,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,WAAW;EAAA,IAAGQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACrD,IAAGC,MAAM,CAACC,IAAI,KAAK,WAAW,EAAC;IAC9B,OAAO;MACJR,OAAO,EAAGG,KAAK,CAACH,OAAO,GAAG,CAAC;MAC3BC,WAAW,EAAEE,KAAK,CAACF;IACtB,CAAC;EACF;EAEA,IAAGM,MAAM,CAACC,IAAI,KAAK,UAAU,EAAC;IAC3B,OAAO;MACJR,OAAO,EAAGG,KAAK,CAACH,OAAO,GAAGO,MAAM,CAACE,MAAM;MACvCR,WAAW,EAAEE,KAAK,CAACF;IACtB,CAAC;EACF;EAED,IAAGM,MAAM,CAACC,IAAI,KAAK,WAAW,EAAC;IAC5B,OAAO;MACJR,OAAO,EAAGG,KAAK,CAACH,OAAO,GAAG,CAAC;MAC3BC,WAAW,EAAEE,KAAK,CAACF;IACtB,CAAC;EACL;EAEA,IAAGM,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAC;IACzB,OAAO;MACJR,OAAO,EAAGG,KAAK,CAACH,OAAO;MACvBC,WAAW,EAAE,CAACE,KAAK,CAACF;IACvB,CAAC;EACJ;EACE,OAAOE,KAAK;AACd,CAAC;AAED,MAAMO,UAAU,GAAGZ,WAAW,CAACI,eAAe,CAAC;AAE/C,eAAeQ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}